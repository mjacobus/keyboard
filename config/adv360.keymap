/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC                  &kp NUMBER_1  &kp N2        &kp N3   &kp N4            &kp N5  &kp NUMBER_6                                                                                                   &kp EQUAL              &kp NUMBER_7  &kp NUMBER_8                  &kp NUMBER_9  &kp NUMBER_0  &kp MINUS                    &kp BACKSPACE
&kp TAB                  &kp Q         &kp W         &kp E    &kp R             &kp T   &kp LEFT_BRACE                                                                                                 &kp RIGHT_BRACE        &kp Y         &kp U                         &kp I         &kp O         &kp P                        &kp BSLH
&hm LEFT_CONTROL ESCAPE  &hm LCTRL A   &kp S         &lt 6 D  &lt 4 F           &kp G   &kp LBKT          &kp LCTRL               &kp LALT  &none  &none  &kp C_MUTE               &kp INSERT          &kp RBKT               &kp H         &kp J                         &kp K         &kp L         &hm RIGHT_CONTROL SEMICOLON  &kp SQT
&kp LEFT_SHIFT           &kp Z         &kp X         &lt 7 C  &lt 3 V           &kp B   &none             &none                   &kp HOME  &none  &none  &kp C_VOLUME_UP          &none               &none                  &kp N         &lt 3 M                       &lt 7 COMMA   &kp DOT       &kp FSLH                     &sk RIGHT_SHIFT
&kp LCTRL                &mo 5         &kp LEFT_ALT  &none    &kp LEFT_COMMAND          &lt 2 LEFT_SHIFT  &mt LEFT_COMMAND SPACE  &kp END                 &hm RCTRL C_VOLUME_DOWN  &hm LEFT_WIN ENTER  &hm RIGHT_SHIFT SPACE                &hm RIGHT_COMMAND LEFT_ARROW  &kp DOWN      &kp UP_ARROW  &kp RIGHT_ARROW              &mo 5
            >;
        };

        MAC_OVERLAY {
            bindings = <
&trans  &trans   &trans  &trans  &trans  &trans  &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans           &trans
&trans  &trans   &trans  &trans  &trans  &trans  &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans           &trans
&trans  &lt 8 A  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &lt 8 SEMICOLON  &trans
&trans  &trans   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans           &trans
&trans  &trans   &trans  &trans  &trans          &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans  &trans  &trans           &trans
            >;
        };

        layer_keypad {
            bindings = <
&trans  &kp F1  &kp F2  &kp F3     &kp F4       &kp F5  &kp F6                                                                      &trans           &kp F7        &kp F8        &kp F9        &kp F10       &kp F11    &kp F12
&trans  &trans  &trans  &trans     &kp PERCENT  &trans  &trans                                                                      &kp KP_MULTIPLY  &kp KP_PLUS   &kp N7        &kp N8        &kp N9        &trans     &trans
&trans  &trans  &trans  &kp COMMA  &kp DOT      &trans  &trans  &trans     &trans  &trans  &trans  &trans                &trans     &kp KP_SLASH     &kp KP_MINUS  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp COLON  &trans
&trans  &trans  &trans  &trans     &trans       &trans  &trans  &trans     &trans  &trans  &trans  &kt C_BRIGHTNESS_INC  &trans     &trans           &kp ASTERISK  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans     &trans
&trans  &trans  &trans  &trans     &trans               &trans  &kp SPACE  &trans                  &kt C_BRIGHTNESS_DEC  &kp ENTER  &kp NUMBER_0                   &kp NUMBER_0  &kp COMMA     &kp DOT       &trans     &mo 0
            >;
        };

        layer_Symbols {
            bindings = <
&trans     &trans     &trans        &trans          &trans      &trans     &trans                                                  &trans                &trans         &trans               &none                 &none                  &trans  &kp DELETE
&trans     &kp PLUS   &kp MINUS     &kp CARET       &kp SQT     &kp TILDE  &trans                                                  &trans                &kp EQUAL      &macro_double_quote  &macro_single_quote   &trans                 &trans  &trans
&kp TILDE  &kp TILDE  &kp AT_SIGN   &kp HASH        &kp DOLLAR  &kp GRAVE  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp LEFT_PARENTHESIS  &kp AMPERSAND  &kp KP_MULTIPLY      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans  &trans
&trans     &kp EXCL   &kp QUESTION  &kp LEFT_BRACE  &kp UNDER   &kp EQUAL  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                &trans         &kp EXCLAMATION      &kp QUESTION          &trans                 &trans  &trans
&trans     &trans     &trans        &trans          &trans                 &trans  &trans  &trans                  &trans  &trans  &trans                               &trans               &trans                &trans                 &trans  &mo 0
            >;
        };

        layer_Directions {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                                  &trans  &trans          &trans          &trans        &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                                  &trans  &trans          &kp HOME        &kp END       &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans          &kt PAGE_DOWN   &kt PAGE_UP   &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans                  &trans  &trans  &trans                  &trans          &trans        &trans           &trans  &mo 0
            >;
        };

        layer_MOD {
            bindings = <
&trans  &bt BT_CLR  &trans  &trans  &trans  &trans  &trans                                                                   &bt BT_CLR       &trans  &trans      &trans      &trans  &trans  &trans
&trans  &trans      &trans  &trans  &trans  &trans  &bootloader                                                              &bootloader      &trans  &trans      &trans      &trans  &trans  &trans
&trans  &trans      &trans  &trans  &trans  &trans  &trans       &bt BT_CLR  &trans  &trans  &trans  &bt BT_CLR  &trans      &trans           &trans  &trans      &trans      &to 0   &trans  &trans
&trans  &trans      &trans  &trans  &trans  &trans  &trans       &trans      &trans  &trans  &trans  &trans      &trans      &trans           &trans  &to 1       &trans      &trans  &trans  &trans
&trans  &trans      &trans  &trans  &trans          &trans       &trans      &trans                  &trans      &bl BL_TOG  &rgb_ug RGB_TOG          &bl BL_INC  &bl BL_DEC  &trans  &trans  &trans
            >;
        };

        layer_fkeys {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                                  &trans  &trans   &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                                  &trans  &kp F12  &kt F7  &kp F8  &kp F9  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp F11  &kp F4  &kp F5  &kp F6  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp F10  &kt F1  &kp F2  &kp F3  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans                  &trans  &trans  &trans           &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_Special {
            bindings = <
&trans  &trans    &trans     &trans                &trans                 &trans  &trans                                                  &trans  &trans      &trans         &trans  &trans  &trans  &trans
&trans  &trans    &trans     &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans  &trans                                                  &trans  &trans      &trans         &trans  &trans  &trans  &trans
&trans  &kp PLUS  &kp MINUS  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp DELETE  &kp BACKSPACE  &trans  &trans  &trans  &trans
&trans  &trans    &trans     &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &kp BACKSPACE  &trans  &trans  &trans  &trans
&trans  &trans    &trans     &trans                &trans                         &trans  &trans  &trans                  &trans  &trans  &trans              &trans         &trans  &trans  &trans  &trans
            >;
        };

        MacOverlayTwo {
            bindings = <
&trans  &trans     &trans     &trans     &trans     &trans     &trans                                                  &trans  &trans     &trans     &trans     &trans     &trans     &trans
&trans  &kp LG(Q)  &kp LG(W)  &kp LG(E)  &kp LG(R)  &kp LG(T)  &trans                                                  &trans  &kp LG(Y)  &kp LG(U)  &kp LG(O)  &kp LG(I)  &kp LG(P)  &trans
&trans  &kp LG(A)  &kp LG(S)  &kp LG(D)  &kp LG(F)  &kp LG(G)  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp LG(H)  &kp LG(J)  &kp LG(K)  &kp LG(L)  &trans     &trans
&trans  &kp LG(Z)  &kp LG(X)  &kp LG(C)  &kp LG(V)  &kp LC(B)  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp LG(N)  &kp LG(M)  &trans     &trans     &trans     &trans
&trans  &trans     &trans     &trans     &trans                &trans  &trans  &trans                  &trans  &trans  &trans             &trans     &trans     &trans     &trans     &trans
            >;
        };
    };
};
